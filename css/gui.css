/* # component_file # */

/**
* SELECT
* .multiline allows options to span over multiple lines
* .multiple makes it a multiple select |NOTE: Checkboxes should be used instead of radio buttons
*
* EXAMPLE
<div class="l_gui_select">
    <div tabIndex="-1">
        <label><input type="radio" name="NAME" checked><p>TEXT HERE</p></label>
    </div>
</div>
*/
.l_gui_select {
    display: inline-block;
    height: 25px;
    position: relative;
    vertical-align: middle;
    width: 250px;
}

    .l_gui_select.multiple {
        height: auto;
    }

    .l_gui_select.focused > div p,
    .l_gui_select input:checked ~ p,
    .l_gui_select label,
    .l_gui_select.multiple p {
        display: block;
    }

    .l_gui_select p,
    .l_gui_select input {
        display: none;
    }

    .l_gui_select > div {
        background: #fff;
        border: 1px solid #dedede;
        color: #444;
        height: 100%;
        outline: none;
        overflow: hidden;
        position: absolute;
        width: 100%;
        z-index: 2;
    }

        .l_gui_select.focused > div,
        .l_gui_select.multiple > div {
            height: auto;
            max-height: 165px; /* Determines dropped height */
            overflow-y: auto;
        }

        .l_gui_select.focused > div {
            z-index: 3;
        }

        .l_gui_select.multiple > div {
            position: relative;
        }

        .l_gui_select > div:after {
            /* This allows for the usage of an arrow indicator.
            content: url(select-arrow-down.png);
            */
            position: absolute;
            top: 50%;
            right: 3px;
            margin-top: -8px;
        }

            .l_gui_select.focused > div:after,
            .l_gui_select.multiple > div:after {
                display: none;
            }

        .l_gui_select.focused > div p:hover,
        .l_gui_select.focused > div input:checked ~ p:hover {
            background: #efefef;
        }

            .l_gui_select.focused > div input:checked ~ p,
            .l_gui_select.multiple > div input:checked ~ p {
                background: #f7f7f7;
                border-bottom-color: #ddd;
                color:#dbaa6b;
            }

    .l_gui_select p {
        border-bottom: 1px solid transparent;
        cursor: pointer;
        line-height: 25px; /* Should be equal to .l_gui_select height */
        margin: 0;
        padding: 0 3px;
        transition: background .3s ease;
        white-space: nowrap;
    }

        .l_gui_select.multiline p {
            white-space: normal;
        }

    .l_gui_select input.disabled ~ p,
    .l_gui_select input.disabled ~ p:hover {
        border: none;
        color: #aaa;
    }
/**/


/**
* CHECKBOX
* .disabled class disables the checkbox.
*
* EXAMPLE
<span class="l_gui_checkbox"></span>
*/
.l_gui_checkbox,
.l_gui_checkbox:after {
    transition: .25s;
}

.l_gui_checkbox {
    background: #bbb;
    border: 1px solid #444;
    border-radius: 3px;
    cursor: pointer;
    display: inline-block;
    height: 19px;
    position: relative;
    transition-property: background, opacity;
    width: 40px;
}

    .l_gui_checkbox:not(.disabled).checked {
        background: #2d9e21;
    }

    .l_gui_checkbox.disabled {
        opacity: .3;
    }

    .l_gui_checkbox:after {
        background: #fff;
        border-radius: 3px;
        content: '';
        height: 100%;
        left: 0;
        position: absolute;
        top: 0;
        transition: .2s;
        transition-property: left, width;
        width: 40%;
    }

        .l_gui_checkbox:active:not(.disabled):after {
            width: 55%;
        }

        .l_gui_checkbox.checked:not(.disabled):after {
            left: 60%;
        }

            .l_gui_checkbox.checked:not(.disabled):active:after {
                left: 45%;
                width: 55%;
            }
/**/


/**
* BUTTON
*
* EXAMPLE
<button class="l_gui_button"></button>
*
* Note: may work on other elements with class "button"
*/
.l_gui_button {
	background: #555;
	border-radius: 3px;
	color: #ddd;
    cursor: pointer;
	font-weight: bold;
    min-height: 28px;
	padding: 6px 12px;
	transition: .2s;
	transition-property: background, color, transform;
}

	.l_gui_button:hover {
		background: #aaa;
		color: #333;
	}

    .l_gui_button:active {
        transform: translate(2px, 2px);
    }

    .l_gui_button:disabled {
        background: #ddd;
        color: #aaa;
    }
/**/

/**
* Close button.
*
* EXAMPLE
<button class="l_gui_close" type="button"><span></span></button>
*/
.l_gui_close {
    width: 30px;
    height: 30px;
    cursor: pointer;
}

    .l_gui_close > span,
    .l_gui_close > span:before,
    .l_gui_close > span:after {
        content: '';
        display: block;
        position: absolute;
        width: 30px;
        height: 2px;
        background: #444;
        border-radius: 1px;
    }

    .l_gui_close > span {
        background: transparent;
    }

        .l_gui_close > span:before {
            -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
        }

        .l_gui_close > span:after {
            -webkit-transform: rotate(-45deg);
            -ms-transform: rotate(-45deg);
            transform: rotate(-45deg);
        }
/**/


/**
* Input field.
*
* EXAMPLE
<input class="l_gui_input" type="text">
*/
.l_gui_input {
    border: none;
    border-bottom: 2px solid #bbb;
    outline: none;
    padding: 2px;
    transition: border .25s;
}

    .l_gui_input.focused {
        border-bottom-color: #444;
    }
/**/


/**
* Progress bar.
*
* EXAMPLE
<div class="l_gui_progressbar">
    <span></span>
    <p><span>10</span>%</p>
</div>
*/
.l_gui_progressbar {
    border: 1px solid #efefef;
    border-radius: 19px;
    box-shadow: 0 0 6px 2px #aaa;
    display: inline-block;
    height: 27px;
    overflow: hidden;
    position: relative;
    width: 190px;
}

    .l_gui_progressbar > span {
        background: #17c305;
        border-radius: inherit;
        box-shadow: 1px 0 5px #17c305;
        display: block;
        height: 100%;
        left: -100%;
        position: absolute;
        transition: left .25s;
        width: 100%;
        z-index: -1;
    }

        .l_gui_progressbar > span:before {
            animation: progressBarGlow 2s infinite;;
            background: linear-gradient(to left, rgba(255, 255, 255, .1), rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.1));
            border-radius: 5px;
            box-shadow: 0 0 15px 5px rgba(255, 255, 255, 0.1);
            content: '';
            height: 100%;
            left: 0;
            position: absolute;
            top: 0;
            width: 54px;
        }

        @keyframes progressBarGlow {
            0% {
                left: -10%;
            }
            95%, 100% {
                left: 110%;
            }
        }

    .l_gui_progressbar > p {
        font-weight: bold;
        height: 100%;
        /* Visually based on progress bar's height */
        line-height: 24px;
        margin: 0;
        text-align: center;
        width: 100%;
    }
/**/